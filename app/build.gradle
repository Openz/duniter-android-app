import java.util.regex.Pattern

apply plugin: 'com.android.model.application'

model {
    android {

        compileSdkVersion = 21
        buildToolsVersion = "21.1.2"

        defaultConfig.with {
            applicationId = "io.ucoin.ucoin"
            minSdkVersion.apiLevel = 14
            targetSdkVersion.apiLevel = 21

            versionCode = getVersionCodeFromManifest()
            versionName = '0.8'
            //signingConfig = signingConfigs.config
        }
    }

    /*android.sources {
        main {
            jni {
                source {
                    srcDirs = [] //disable automatic ndk-build call
                }
            }
            jniLibs {
                srcDir = 'src/main/libs'
            }
        }
    }*/

        /*project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]
        //versionCode digit for each supported ABI, with 64bit>32bit and x86>armeabi-*

        applicationVariants.all { variant ->
            // assign different version code for each output
            variant.outputs.each { output ->
                output.versionCodeOverride =
                        project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + defaultConfig.versionCode
            }
        }
        splits {
            abi {
                enable true // enable ABI split feature to create one APK per ABI
                universalApk true //generate an additional APK that targets all the ABIs
            }
        }*/

    android.buildTypes {
            release {
                minifyEnabled = true
                proguardFiles += file('proguard-rules.pro')
            }
        }

    android.packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'THIRD-PARTY.txt'
        exclude 'LICENSE.txt'
    }


    android.productFlavors {
    }

    android.lintOptions {
        abortOnError false
    }
}

def getVersionCodeFromManifest() {
    def manifestFile = file('src/main/AndroidManifest.xml')
    //def manifestFile = file(model.android.sources.main.manifest.srcFile)
    def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
    def matcher = pattern.matcher(manifestFile.getText())
    matcher.find()
    return Integer.parseInt(matcher.group(1))
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('com.google.code.gson:gson:2.2.+') {
        //excluding a particular transitive dependency:
        //exclude( group: 'commons-beanutils')
        //exclude( group: 'commons-collections4')
    }
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.android.support:support-v13:21.0.+'
    //compile 'com.android.support:recyclerview-v7:21.0.+'
    compile project(':scrypt')
    compile project(':kalium-jni')
}
